name: client_test using docker and deploying to server

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: login to docker
      run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

    - name: build docker test file for client
      run: docker build ./client -t devsocbpgc/waves_client_test_reg_portal
      
    - name: test docker file for client
      run: docker run devsocbpgc/waves_client_test_reg_portal npm run test:ci

    - name: build docker prod file for client
      run: docker build ./client -t devsocbpgc/waves_client_reg_portal -f ./client/Dockerfile.prod

    - name: build docker prod file for server
      run: docker build ./server -t devsocbpgc/waves_server_reg_portal -f ./server/Dockerfile.prod

    - name: push to docker hub
      run: |
        docker push devsocbpgc/waves_client_reg_portal
        docker push devsocbpgc/waves_server_reg_portal

    - name: deploying to servers
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        script: |
            cd waves2020_reg_portal
            git fetch --all
            git reset --hard origin/master
            docker rmi $(docker images -q --filter "dangling=true")
            docker system prune -a
            docker pull devsocbpgc/waves_client_reg_portal
            docker pull devsocbpgc/waves_server_reg_portal
            docker-compose down
            docker-compose -f docker-compose.prod.yml up --build -d
            rm -rf /var/www/register.bitswaves.org/html/*
            docker cp waves_client_reg_portal_container:/usr/src/waves2020_reg_portal/client/build/. /var/www/register.bitswaves.org/html/



# git fetch --all
# git reset --hard origin/master

# rm -rf waves2020
# git clone https://github.com/ishantgupta777/waves2020.git

# docker kill $(docker ps -a -q)
# docker rm $(docker ps -a -q)
# docker-compose -f docker-compose.prod.yml up --build -d


# docker-compose pull
# docker-compose -f docker-compose.prod.yml up  --build
